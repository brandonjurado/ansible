- name: Update APT cache inside LXC containers
  command: pct exec {{ item.value }} -- apt update
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Upgrade specified packages inside LXC containers
  command: pct exec {{ item.value }} -- apt -y upgrade
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Ensure correct ownership for Plex directory
  command: pct exec {{ item.value }} -- chown -R plex:plex /var/lib/plexmediaserver/
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.key == 'plexmediaserver'

- name: Clean up unnecessary packages inside LXC containers
  command: pct exec {{ item.value }} -- bash -c "apt -y autoremove && apt autoclean"
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Ensure services are running inside LXC containers
  command: pct exec {{ item.value }} -- bash -c "systemctl is-active {{ item.key }} || (systemctl start {{ item.key }} && systemctl is-active {{ item.key }})"
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

# Full System Upgrade Logic
- name: Get the current date
  command: date +%d
  register: current_day

- name: Perform full system upgrade if today is the first day of the month
  command: pct exec {{ item.value }} -- apt -y dist-upgrade && apt autoremove
  when: current_day.stdout == "01"
  retries: 3
  delay: 5
  loop: "{{ lxc_containers | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

# Add the cron job for Plex cache cleanup
- name: Ensure Plex cache cleanup cron job is present
  cron:
    name: "Plex Cache Cleanup"
    minute: "0"
    hour: "2"
    job: "pct exec 101 -- rm -rf /var/lib/plexmediaserver/Library/Application\\ Support/Plex\\ Media\\ Server/Cache/*"
    user: root
